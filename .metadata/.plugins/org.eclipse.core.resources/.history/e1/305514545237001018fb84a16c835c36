package thw.edu.javaII.port.warehouse.ui.panels;

import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import net.miginfocom.swing.MigLayout;
import thw.edu.javaII.port.warehouse.model.LagerPlatz;
import thw.edu.javaII.port.warehouse.model.deo.WarehouseDEO;
import thw.edu.javaII.port.warehouse.model.deo.WarehouseReturnDEO;
import thw.edu.javaII.port.warehouse.model.deo.Zone;
import thw.edu.javaII.port.warehouse.model.deo.Command;
import thw.edu.javaII.port.warehouse.model.common.Cast;
import thw.edu.javaII.port.warehouse.ui.common.Session;

public class DeleteLagerPlatz extends JDialog {
    private Session ses;
    private JComboBox<LagerPlatz> cbLagerPlatz;
    private JButton btnDelete, btnCancel;

    public DeleteLagerPlatz(Session ses, JFrame parent) {
        super(parent, "Lagerplatz löschen", true);
        this.ses = ses;
        initializeUI();
    }

    private void initializeUI() {
        setLayout(new MigLayout("fill, wrap 2", "[right][grow]", ""));
        setSize(400, 150);
        setLocationRelativeTo(getParent());

        // Lagerplatz auswählen
        add(new JLabel("Lagerplatz auswählen:"));
        cbLagerPlatz = new JComboBox<>();
        loadLagerPlatz();
        add(cbLagerPlatz, "growx");

        // Buttons
        btnDelete = new JButton("Löschen");
        btnDelete.addActionListener(e -> deleteLagerPlatz());
        btnCancel = new JButton("Abbrechen");
        btnCancel.addActionListener(e -> dispose());
        add(btnDelete, "split 2, right");
        add(btnCancel);
    }

    private void loadLagerPlatz() {
        try {
            WarehouseDEO deo = new WarehouseDEO();
            deo.setZone(Zone.LAGERPLATZ);
            deo.setCommand(Command.LIST);
            WarehouseReturnDEO ret = ses.getCommunicator().sendRequest(deo);
            if (ret.getStatus() == thw.edu.javaII.port.warehouse.model.deo.Status.OK) {
                java.util.List<LagerPlatz> lagerPlatzList = Cast.safeListCast(ret.getData(), LagerPlatz.class);
                cbLagerPlatz.removeAllItems();
                if (lagerPlatzList != null) {
                    for (LagerPlatz lagerPlatz : lagerPlatzList) {
                        cbLagerPlatz.addItem(lagerPlatz);
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Fehler beim Laden der Lagerplätze: " + e.getMessage(), "Fehler", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void deleteLagerPlatz() {
        try {
            LagerPlatz selected = (LagerPlatz) cbLagerPlatz.getSelectedItem();
            if (selected == null) {
                JOptionPane.showMessageDialog(this, "Bitte wählen Sie einen Lagerplatz aus.", "Fehler", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int confirm = JOptionPane.showConfirmDialog(this, "Möchten Sie den Lagerplatz '" + selected.getName() + "' wirklich löschen?", "Bestätigung", JOptionPane.YES_NO_OPTION);
            if (confirm != JOptionPane.YES_OPTION) {
                return;
            }

            WarehouseDEO deo = new WarehouseDEO();
            deo.setZone(Zone.LAGERPLATZ);
            deo.setCommand(Command.DELETE);
            deo.setData(selected);

            WarehouseReturnDEO ret = ses.getCommunicator().sendRequest(deo);
            if (ret.getStatus() == thw.edu.javaII.port.warehouse.model.deo.Status.OK) {
                JOptionPane.showMessageDialog(this, "Lagerplatz erfolgreich gelöscht.", "Erfolg", JOptionPane.INFORMATION_MESSAGE);
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, ret.getMessage(), "Fehler", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Fehler: " + e.getMessage(), "Fehler", JOptionPane.ERROR_MESSAGE);
        }
    }
}
