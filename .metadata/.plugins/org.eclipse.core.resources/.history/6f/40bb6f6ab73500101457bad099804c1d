package thw.edu.javaII.port.warehouse.ui.panels;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;

import net.miginfocom.swing.MigLayout;
import thw.edu.javaII.port.warehouse.model.LagerBestand;
import thw.edu.javaII.port.warehouse.model.LagerPlatz;
import thw.edu.javaII.port.warehouse.model.Produkt;
import thw.edu.javaII.port.warehouse.ui.common.Session;
import thw.edu.javaII.port.warehouse.ui.model.LagerPlatzComboboxModel;

import javax.swing.JComboBox;

public class AddProdukt extends JDialog {

    private static final long serialVersionUID = -8118048952794691740L;
    private final JPanel contentPanel = new JPanel();
    private JTextField txtName;
    private JTextField txtHersteller;
    private JTextField txtPreis;
    private JTextField txtBestand;

    public AddProdukt(Session ses) {
        Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = new Dimension(450, 300);
        setBounds(ss.width / 2 - frameSize.width / 2, ss.height / 2 - frameSize.height / 2, 450, 365);
        getContentPane().setLayout(new BorderLayout());
        JLabel lblNewLabel = new JLabel("Produkt - hinzufügen");
        lblNewLabel.setFont(new Font("Lucida Grande", Font.BOLD, 14));
        lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
        getContentPane().add(lblNewLabel, BorderLayout.NORTH);
        contentPanel.setLayout(new MigLayout("", "[99.00][grow][][]", "[][][][][][][][][][]"));
        contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
        getContentPane().add(contentPanel, BorderLayout.CENTER);

        JLabel lblNewLabel_3 = new JLabel("Name:");
        contentPanel.add(lblNewLabel_3, "cell 0 0,alignx trailing");

        txtName = new JTextField();
        contentPanel.add(txtName, "cell 1 0,growx");
        txtName.setColumns(10);

        JLabel lblNewLabel_4 = new JLabel("Hersteller:");
        contentPanel.add(lblNewLabel_4, "cell 0 1,alignx trailing");

        txtHersteller = new JTextField();
        contentPanel.add(txtHersteller, "cell 1 1,growx");
        txtHersteller.setColumns(10);

        JLabel lblNewLabel_15 = new JLabel("Einzelpreis:");
        contentPanel.add(lblNewLabel_15, "cell 0 2,alignx trailing");

        txtPreis = new JTextField();
        contentPanel.add(txtPreis, "cell 1 2,growx");
        txtPreis.setColumns(10);

        JLabel lblNewLabel_10 = new JLabel("Bestand:");
        contentPanel.add(lblNewLabel_10, "cell 0 3,alignx trailing");

        txtBestand = new JTextField();
        contentPanel.add(txtBestand, "cell 1 3,growx");
        txtBestand.setColumns(10);

        JLabel lblNewLabel_9 = new JLabel("Lagerplatz:");
        contentPanel.add(lblNewLabel_9, "cell 0 4,alignx trailing");

        LagerPlatzComboboxModel model = new LagerPlatzComboboxModel(ses.getCommunicator().getFreeLagerPlatz());
        JComboBox<LagerPlatz> cbLagerPlatz = new JComboBox<>(model);
        contentPanel.add(cbLagerPlatz, "cell 1 4,growx");

        JButton btnSpeichern = new JButton("speichern");
        btnSpeichern.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    // Validierung der Eingaben
                    String name = txtName.getText().trim();
                    String hersteller = txtHersteller.getText().trim();
                    if (name.isEmpty() || hersteller.isEmpty()) {
                        JOptionPane.showMessageDialog(AddProdukt.this, 
                            "Name und Hersteller dürfen nicht leer sein.", 
                            "Fehler", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    double preis = Double.parseDouble(txtPreis.getText().trim());
                    int bestand = Integer.parseInt(txtBestand.getText().trim());
                    if (preis <= 0 || bestand < 0) {
                        JOptionPane.showMessageDialog(AddProdukt.this, 
                            "Preis muss positiv und Bestand nicht negativ sein.", 
                            "Fehler", JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    if (cbLagerPlatz.getSelectedIndex() == -1) {
                        JOptionPane.showMessageDialog(AddProdukt.this, 
                            "Bitte einen Lagerplatz auswählen.", 
                            "Fehler", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    // Erstelle Produkt ohne ID (wird serverseitig gesetzt)
                    Produkt p = new Produkt(0, name, hersteller, preis);
                    LagerBestand l = new LagerBestand(0, bestand, p, 
                        cbLagerPlatz.getModel().getElementAt(cbLagerPlatz.getSelectedIndex()));
                    boolean okay = ses.getCommunicator().addProdukt(p, l);
                    if (okay) {
                        JOptionPane.showMessageDialog(AddProdukt.this, 
                            "Produkt erfolgreich hinzugefügt.", 
                            "Erfolg", JOptionPane.INFORMATION_MESSAGE);
                        dispose();
                    } else {
                        JOptionPane.showMessageDialog(AddProdukt.this, 
                            "Fehler beim Speichern. Der Datensatz konnte nicht gespeichert werden.", 
                            "Fehler", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(AddProdukt.this, 
                        "Bitte gültige Zahlen für Preis und Bestand eingeben.", 
                        "Fehler", JOptionPane.ERROR_MESSAGE);
                }
            }
        });

        contentPanel.add(btnSpeichern, "cell 2 8");

        JPanel buttonPane = new JPanel();
        buttonPane.setLayout(new FlowLayout(FlowLayout.RIGHT));
        getContentPane().add(buttonPane, BorderLayout.SOUTH);
        JButton btnClose = new JButton("Schließen");
        btnClose.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
        btnClose.setActionCommand("OK");
        buttonPane.add(btnClose);
    }
}