package thw.edu.javaII.port.warehouse.ui.panels;

import java.awt.*;
import javax.swing.*;
import java.io.IOException;

import thw.edu.javaII.port.warehouse.model.LagerPlatz;
import thw.edu.javaII.port.warehouse.model.deo.WarehouseDEO;
import thw.edu.javaII.port.warehouse.model.deo.WarehouseReturnDEO;
import thw.edu.javaII.port.warehouse.model.deo.Zone;
import thw.edu.javaII.port.warehouse.model.deo.Command;
import thw.edu.javaII.port.warehouse.ui.common.Session;
import thw.edu.javaII.port.warehouse.model.common.Cast;
import java.util.Comparator;
import java.util.ArrayList;
import java.util.Collections;

/**
 * Panel zur Anzeige und Verwaltung der Lagerplatzübersicht im Lagerverwaltungssystem.
 *
 * <p>Diese Klasse erweitert JPanel und bietet eine umfassende Benutzeroberfläche
 * zur Anzeige aller Lagerplätze mit Such-, Sortier- und Verwaltungsfunktionen wie
 * Hinzufügen, Bearbeiten und Löschen von Lagerplätzen.
 *
 * <p>Attribute:
 * <ul>
 *   <li>Session ses – aktuelle Benutzersitzung</li>
 *   <li>JTable table – Tabelle zur Anzeige der Lagerplätze</li>
 *   <li>LagerPlatzTableModel tableModel – Datenmodell für die Lagerplatztabelle</li>
 * </ul>
 *
 * <p>Wesentliche Methoden:
 * <ul>
 *   <li>LagerPlatzPage(Session) – Konstruktor mit UI-Initialisierung</li>
 *   <li>initializeUI() – Erstellt die komplette Benutzeroberfläche</li>
 *   <li>refresh() – Lädt und aktualisiert Lagerplatzdaten vom Server</li>
 *   <li>updateSortIndicator(int, boolean) – Aktualisiert Sortierungsanzeige</li>
 * </ul>
 *
 * @author Bjarne von Appen
 * @author Paul Hartmann
 * @author Lennart Höpfner
 */
public class LagerPlatzPage extends JPanel {
    private static final long serialVersionUID = 328328L;
    
    /** Aktuelle Benutzersitzung */
    private Session ses;
    /** Tabelle zur Anzeige der Lagerplätze */
    private JTable table;
    /** Datenmodell für die Lagerplatztabelle */
    private LagerPlatzTableModel tableModel;

    /**
     * Konstruktor erstellt das Lagerplatzübersichts-Panel.
     *
     * @param ses aktuelle Benutzersitzung
     */
    public LagerPlatzPage(Session ses) {
        this.ses = ses;
        setLayout(new BorderLayout());
        initializeUI();

        // Standard-Sortierung nach Kapazität aufsteigend nach dem Laden der Daten
        tableModel.sortByCapacity(false);
    }

    /**
     * Initialisiert die komplette Benutzeroberfläche des Panels.
     *
     * @author Bjarne von Appen
     */
    private void initializeUI() {
        // Oberes Panel für Titel, Suche und Sortierbuttons
        JPanel topPanel = new JPanel(new BorderLayout());

        // Titel-Label
        JLabel lblTitle = new JLabel("Lagerplatzübersicht");
        lblTitle.setFont(new Font("Arial", Font.BOLD, 16));
        topPanel.add(lblTitle, BorderLayout.NORTH);

        // Suchpanel mit ID-Suche
        JPanel searchPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JLabel lblIdSearch = new JLabel("Nach ID suchen:");
        JTextField idField = new JTextField(10);
        idField.setToolTipText("Geben Sie die Lagerplatz-ID ein (mind. 4 Ziffern)");
        JButton btnSearch = new JButton("Suchen");
        JButton btnReset = new JButton("Zurücksetzen");

        searchPanel.add(lblIdSearch);
        searchPanel.add(idField);
        searchPanel.add(btnSearch);
        searchPanel.add(btnReset);
        topPanel.add(searchPanel, BorderLayout.SOUTH);

        // Sortierbuttons für ID, Name und Kapazität
        JPanel sortPanel = new JPanel(new FlowLayout(FlowLayout.LEFT));
        JToggleButton sortByIdButton = new JToggleButton("Sortieren nach ID");
        JToggleButton sortByNameButton = new JToggleButton("Sortieren nach Name");
        JToggleButton sortByCapacityButton = new JToggleButton("Sortieren nach Kapazität");

        // Event-Handler für ID-Sortierung
        sortByIdButton.addActionListener(e -> {
            boolean ascending = !sortByIdButton.isSelected();
            tableModel.sortById(ascending);
            sortByIdButton.setText(ascending ? "Sortieren nach ID ↑" : "Sortieren nach ID ↓");
            sortByNameButton.setSelected(false);
            sortByNameButton.setText("Sortieren nach Name");
            sortByCapacityButton.setSelected(false);
            sortByCapacityButton.setText("Sortieren nach Kapazität");
            updateSortIndicator(0, ascending); // Spalte 0 (ID)
        });

        // Event-Handler für Name-Sortierung
        sortByNameButton.addActionListener(e -> {
            boolean ascending = !sortByNameButton.isSelected();
            tableModel.sortByName(ascending);
            sortByNameButton.setText(ascending ? "Sortieren nach Name ↑" : "Sortieren nach Name ↓");
            sortByIdButton.setSelected(false);
            sortByIdButton.setText("Sortieren nach ID");
            sortByCapacityButton.setSelected(false);
            sortByCapacityButton.setText("Sortieren nach Kapazität");
            updateSortIndicator(1, ascending); // Spalte 1 (Name)
        });

        // Event-Handler für Kapazitäts-Sortierung
        sortByCapacityButton.addActionListener(e -> {
            boolean ascending = !sortByCapacityButton.isSelected();
            tableModel.sortByCapacity(ascending);
            sortByCapacityButton.setText(ascending ? "Sortieren nach Kapazität ↑" : "Sortieren nach Kapazität ↓");
            sortByIdButton.setSelected(false);
            sortByIdButton.setText("Sortieren nach ID");
            sortByNameButton.setSelected(false);
            sortByNameButton.setText("Sortieren nach Name");
            updateSortIndicator(2, ascending); // Spalte 2 (Kapazität)
        });

        sortPanel.add(sortByIdButton);
        sortPanel.add(sortByNameButton);
        sortPanel.add(sortByCapacityButton);
        topPanel.add(sortPanel, BorderLayout.CENTER);

        add(topPanel, BorderLayout.NORTH);

        // Button-Panel für CRUD-Operationen
        JPanel buttonPanel = new JPanel(new FlowLayout(FlowLayout.CENTER, 5, 5));
        JButton addButton = new JButton("Lagerplatz anlegen");
        JButton editButton = new JButton("Lagerplatz bearbeiten");
        JButton deleteButton = new JButton("Lagerplatz lös
