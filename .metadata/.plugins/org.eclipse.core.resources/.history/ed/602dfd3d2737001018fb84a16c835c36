package thw.edu.javaII.port.warehouse.ui;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import thw.edu.javaII.port.warehouse.model.deo.Command;
import thw.edu.javaII.port.warehouse.model.deo.WarehouseDEO;
import thw.edu.javaII.port.warehouse.model.deo.WarehouseReturnDEO;
import thw.edu.javaII.port.warehouse.model.deo.Zone;
import thw.edu.javaII.port.warehouse.ui.common.Session;
import thw.edu.javaII.port.warehouse.ui.panels.*;

public class LagerUIHandler implements ActionListener {
    private Session ses;
    private LagerUI frame; // Typ geändert zu LagerUI für Zugriff auf Getter
    private JFrame parent;
    private JPanel contentPane;

    public LagerUIHandler(Session ses, LagerUI frame, JPanel contentPane, JFrame parent) {
        super();
        this.ses = ses;
        this.frame = frame;
        this.contentPane = contentPane;
        this.parent = parent;
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        MenuActionCommands command = MenuActionCommands.valueOf(e.getActionCommand());
        BorderLayout layout = (BorderLayout) contentPane.getLayout();
        Component centerComponent = layout.getLayoutComponent(BorderLayout.CENTER);
        switch (command) {
            case BEENDEN:
                ses.close();
                frame.dispose();
                break;
            case STARTSEITE:
                if (centerComponent != null) {
                    contentPane.remove(centerComponent);
                }
                contentPane.add(new WelcomePage(), BorderLayout.CENTER);
                frame.setVisible(true);
                break;
            case SERVERBEENDEN:
                ses.getCommunicator().closeServer();
                frame.dispose();
                break;
            case BESTAND:
                if (centerComponent != null) {
                    contentPane.remove(centerComponent);
                }
                frame.ensureBestandPage(); // Stellt sicher, dass BestandPage existiert
                contentPane.add(frame.getBestandPage(), BorderLayout.CENTER);
                frame.setVisible(true);
                break;
            case STATISTIK:
                if (centerComponent != null) {
                    contentPane.remove(centerComponent);
                }
                contentPane.add(new StatistikPage(ses, parent), BorderLayout.CENTER);
                frame.setVisible(true);
                break;
            case SUCHEN:
                if (centerComponent != null) {
                    contentPane.remove(centerComponent);
                }
                contentPane.add(new SearchPage(ses, parent), BorderLayout.CENTER);
                frame.setVisible(true);
                break;
            case INFO:
                if (centerComponent != null) {
                    contentPane.remove(centerComponent);
                }
                contentPane.add(new InfoPage(), BorderLayout.CENTER);
                frame.setVisible(true);
                break;
            case KUNDEN_DATENBANK:
                if (centerComponent != null) {
                    contentPane.remove(centerComponent);
                }
                contentPane.add(new SearchKunde(ses, parent), BorderLayout.CENTER);
                frame.setVisible(true);
                break;
            case BESTELLUNG_PAGE:
                if (centerComponent != null) {
                    contentPane.remove(centerComponent);
                }
                contentPane.add(new BestellungPage(ses), BorderLayout.CENTER);
                frame.setVisible(true);
                break;
            case LAGER:
                if (centerComponent != null) {
                    contentPane.remove(centerComponent);
                }
                contentPane.add(new LagerPage(ses), BorderLayout.CENTER);
                frame.setVisible(true);
                break;
            case LAGERPLATZ_ANLEGEN:
                new AddLagerPlatz(ses, parent).setVisible(true);
                break;
            case LAGERPLATZ_BEARBEITEN:
                new EditLagerPlatz(ses, parent).setVisible(true);
                break;
            case LAGERPLATZ_LOESCHEN:
                new DeleteLagerPlatz(ses, parent).setVisible(true);
                break;
            case LAGERPLATZ_ANZEIGEN:
                if (centerComponent != null) {
                    contentPane.remove(centerComponent);
                }
                contentPane.add(new LagerPlatzPage(ses), BorderLayout.CENTER);
                frame.setVisible(true);
                break;
            case PRODUKT:
                if (centerComponent != null) {
                    contentPane.remove(centerComponent);
                }
                frame.ensureProduktPage(); // Stellt sicher, dass ProduktPage existiert
                contentPane.add(frame.getProduktPage(), BorderLayout.CENTER);
                frame.setVisible(true);
                break;
            case DATENBANK_INITIALISIEREN:
                try {
                    WarehouseDEO deo = new WarehouseDEO();
                    deo.setZone(Zone.INIT);
                    deo.setCommand(Command.INIT);
                    WarehouseReturnDEO ret = ses.getCommunicator().sendRequest(deo);
                    if (ret.getStatus() == thw.edu.javaII.port.warehouse.model.deo.Status.OK) {
                        JOptionPane.showMessageDialog(parent, "Datenbank wurde initialisiert.", "Initialisierung", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(parent, "Fehler: " + ret.getMessage(), "Initialisierungsfehler", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(parent, "Fehler bei der Initialisierung: " + ex.getMessage(), "Fehler", JOptionPane.ERROR_MESSAGE);
                }
                break;
            default:
                break;
        }
        contentPane.revalidate(); // Aktualisiert das Layout nach jeder Änderung
        contentPane.repaint();   // Zeichnet die GUI neu
    }
}