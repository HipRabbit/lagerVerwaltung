package thw.edu.javaII.port.warehouse.ui;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.EventQueue;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Toolkit;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;

import thw.edu.javaII.port.warehouse.ui.common.Session;
import thw.edu.javaII.port.warehouse.ui.panels.BestellungPage;
import thw.edu.javaII.port.warehouse.ui.panels.WelcomePage;

public class LagerUI extends JFrame {

    private static final long serialVersionUID = -5670441158631808726L;
    private JPanel contentPane, pnCopyright;
    private Session ses;
    private JFrame parent;
    private JMenuBar menuBar;
    private JMenu menuDatei;
    private JMenuItem miBeenden, miStartseite, miServerBeenden, miBestand, miStatistik, miSuchen, miInfo, miSearchKunde, miBestellungPage;
    private JLabel lblCopyright;

    public static void run(Session ses) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    LagerUI frame = new LagerUI(ses);
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    public LagerUI(Session ses) {
        this.ses = ses;
        parent = this;
        setTitle("Lagerverwaltung");
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = new Dimension(800, 600);
        setBounds(ss.width / 2 - frameSize.width / 2, ss.height / 2 - frameSize.height / 2, frameSize.width, frameSize.height);
        contentPane = new JPanel();
        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
        contentPane.setLayout(new BorderLayout(0, 0));
        setContentPane(contentPane);
        contentPane.add(new WelcomePage(), BorderLayout.CENTER);
        generateMenu();
        generateFooter();
    }

    private void generateFooter() {
        pnCopyright = new JPanel();
        FlowLayout fl_pnCopyright = (FlowLayout) pnCopyright.getLayout();
        fl_pnCopyright.setVgap(1);
        fl_pnCopyright.setAlignment(FlowLayout.RIGHT);
        lblCopyright = new JLabel("Copyright Tobias Wenninger");
        lblCopyright.setHorizontalAlignment(SwingConstants.RIGHT);
        lblCopyright.setFont(new Font("Lucida Grande", Font.ITALIC, 12));
        contentPane.add(pnCopyright, BorderLayout.SOUTH);
        pnCopyright.add(lblCopyright);
    }

    private void generateMenu() {
        menuBar = new JMenuBar();
        menuDatei = new JMenu("Datei");
        menuDatei.setPreferredSize(new Dimension(160, menuDatei.getPreferredSize().height));
        miBeenden = new JMenuItem("Beenden");
        miBeenden.setPreferredSize(new Dimension(160, miBeenden.getPreferredSize().height));
        miBeenden.setActionCommand(MenuActionCommands.BEENDEN.toString());
        miBeenden.addActionListener(new LagerUIHandler(ses, this, contentPane, parent));
        miStartseite = new JMenuItem("Startseite");
        miStartseite.setPreferredSize(new Dimension(160, miStartseite.getPreferredSize().height));
        miStartseite.setActionCommand(MenuActionCommands.STARTSEITE.toString());
        miStartseite.addActionListener(new LagerUIHandler(ses, this, contentPane, parent));
        miServerBeenden = new JMenuItem("Server Beenden");
        miServerBeenden.addActionListener(new LagerUIHandler(ses, this, contentPane, parent));
        miServerBeenden.setActionCommand(MenuActionCommands.SERVERBEENDEN.toString());
        miBestand = new JMenuItem("Bestand");
        miBestand.addActionListener(new LagerUIHandler(ses, this, contentPane, parent));
        miBestand.setActionCommand(MenuActionCommands.BESTAND.toString());
        miBestand.setPreferredSize(new Dimension(160, miBestand.getPreferredSize().height));
        miStatistik = new JMenuItem("Statistik");
        miStatistik.addActionListener(new LagerUIHandler(ses, this, contentPane, parent));
        miStatistik.setActionCommand(MenuActionCommands.STATISTIK.toString());
        miStatistik.setPreferredSize(new Dimension(160, miStatistik.getPreferredSize().height));
        miSuchen = new JMenuItem("Suchen");
        miSuchen.addActionListener(new LagerUIHandler(ses, this, contentPane, parent));
        miSuchen.setActionCommand(MenuActionCommands.SUCHEN.toString());
        miSuchen.setPreferredSize(new Dimension(160, miSuchen.getPreferredSize().height));
        miInfo = new JMenuItem("Info");
        miInfo.setPreferredSize(new Dimension(160, miInfo.getPreferredSize().height));
        miInfo.addActionListener(new LagerUIHandler(ses, this, contentPane, parent));
        miInfo.setActionCommand(MenuActionCommands.INFO.toString());
        miSearchKunde = new JMenuItem("Kundensuche");
        miSearchKunde.setPreferredSize(new Dimension(160, miSearchKunde.getPreferredSize().height));
        miSearchKunde.addActionListener(new LagerUIHandler(ses, this, contentPane, parent));
        miSearchKunde.setActionCommand(MenuActionCommands.SEARCH_KUNDE.toString());
        miBestellungPage = new JMenuItem("Bestellungsübersicht");
        miBestellungPage.setPreferredSize(new Dimension(160, miBestellungPage.getPreferredSize().height));
        miBestellungPage.addActionListener(new LagerUIHandler(ses, this, contentPane, parent));
        miBestellungPage.setActionCommand(MenuActionCommands.BESTELLUNG_PAGE.toString());

        setJMenuBar(menuBar);
        menuBar.add(menuDatei);
        menuDatei.add(miStartseite);
        menuDatei.add(miBeenden);
        menuDatei.add(miServerBeenden);
        menuBar.add(miBestand);
        menuBar.add(miStatistik);
        menuBar.add(miSuchen);
        menuBar.add(miInfo);
        menuBar.add(miSearchKunde);
        menuBar.add(miBestellungPage); // Direkter Menüpunkt für Bestellungsübersicht
    }

    public void refreshBestellungPage() {
        Component centerComponent = contentPane.getComponent(1); // Das zweite Component ist das Center-Panel (nach der Fußzeile)
        if (centerComponent instanceof BestellungPage) {
            ((BestellungPage) centerComponent).refresh();
        }
    }
}