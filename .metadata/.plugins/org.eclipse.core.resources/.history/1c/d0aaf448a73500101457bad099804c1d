package thw.edu.javaII.port.warehouse.ui.panels;

import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;

import net.miginfocom.swing.MigLayout;
import thw.edu.javaII.port.warehouse.model.Kunde;
import thw.edu.javaII.port.warehouse.ui.common.Session;

public class EditKunde extends JDialog {
    private static final long serialVersionUID = 1L;
    private final JPanel contentPanel = new JPanel();
    private JTextField txtId;
    private JTextField txtVorname;
    private JTextField txtNachname;
    private JTextField txtLieferadresse;
    private JTextField txtRechnungsadresse;
    private final Kunde kunde;

    public EditKunde(Session ses, JFrame parent, Kunde kunde) {
        this.kunde = kunde;
        Dimension ss = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = new Dimension(500, 500); // Etwas größer für neuen Button
        setBounds(ss.width / 2 - frameSize.width / 2, ss.height / 2 - frameSize.height / 2, frameSize.width, frameSize.height);
        getContentPane().setLayout(new BorderLayout());
        JLabel lblNewLabel = new JLabel(kunde == null ? "Neuer Kunde" : "Kunde bearbeiten");
        lblNewLabel.setFont(new Font("Lucida Grande", Font.BOLD, 14));
        lblNewLabel.setHorizontalAlignment(SwingConstants.CENTER);
        getContentPane().add(lblNewLabel, BorderLayout.NORTH);
        contentPanel.setLayout(new MigLayout("", "[100px][grow]", "[][][][][][50px]")); // Zusätzliche Zeile für Button
        contentPanel.setBorder(new EmptyBorder(5, 5, 5, 5));
        getContentPane().add(contentPanel, BorderLayout.CENTER);

        JLabel lblId = new JLabel("ID:");
        contentPanel.add(lblId, "cell 0 0,alignx trailing");

        txtId = new JTextField();
        txtId.setColumns(10);
        if (kunde != null) {
            txtId.setText(String.valueOf(kunde.getId()));
            txtId.setEditable(false);
        } else {
            int nextId = ses.getCommunicator().getNextKundeId();
            if (nextId == -1) {
                JOptionPane.showMessageDialog(null, "Fehler beim Abrufen der nächsten Kunden-ID!", "Fehler", JOptionPane.ERROR_MESSAGE);
                dispose();
                return;
            }
            txtId.setText(String.valueOf(nextId));
            txtId.setEditable(false);
        }
        contentPanel.add(txtId, "cell 1 0,growx");

        JLabel lblVorname = new JLabel("Vorname:");
        contentPanel.add(lblVorname, "cell 0 1,alignx trailing");

        txtVorname = new JTextField();
        txtVorname.setColumns(10);
        if (kunde != null) {
            txtVorname.setText(kunde.getVorname());
        }
        contentPanel.add(txtVorname, "cell 1 1,growx");

        JLabel lblNachname = new JLabel("Nachname:");
        contentPanel.add(lblNachname, "cell 0 2,alignx trailing");

        txtNachname = new JTextField();
        txtNachname.setColumns(10);
        if (kunde != null) {
            txtNachname.setText(kunde.getNachname());
        }
        contentPanel.add(txtNachname, "cell 1 2,growx");

        JLabel lblLieferadresse = new JLabel("Lieferadresse:");
        contentPanel.add(lblLieferadresse, "cell 0 3,alignx trailing");

        txtLieferadresse = new JTextField();
        txtLieferadresse.setColumns(10);
        if (kunde != null) {
            txtLieferadresse.setText(kunde.getLieferadresse());
        }
        contentPanel.add(txtLieferadresse, "cell 1 3,growx");

        JLabel lblRechnungsadresse = new JLabel("Rechnungsadresse:");
        contentPanel.add(lblRechnungsadresse, "cell 0 4,alignx trailing");

        txtRechnungsadresse = new JTextField();
        txtRechnungsadresse.setColumns(10);
        if (kunde != null) {
            txtRechnungsadresse.setText(kunde.getRechnungsadresse());
        }
        contentPanel.add(txtRechnungsadresse, "cell 1 4,growx");

        // Neuer Button: Lieferadresse übernehmen
        JButton btnCopyAdresse = new JButton("Lieferadresse übernehmen");
        btnCopyAdresse.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                String lieferadresse = txtLieferadresse.getText().trim();
                txtRechnungsadresse.setText(lieferadresse);
            }
        });
        contentPanel.add(btnCopyAdresse, "cell 1 5,alignx right");

        JPanel buttonPane = new JPanel();
        buttonPane.setLayout(new FlowLayout(FlowLayout.RIGHT));
        getContentPane().add(buttonPane, BorderLayout.SOUTH);

        JButton btnSpeichern = new JButton("Speichern");
        btnSpeichern.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                try {
                    int id = Integer.parseInt(txtId.getText().trim());
                    String vorname = txtVorname.getText().trim();
                    String nachname = txtNachname.getText().trim();
                    String lieferadresse = txtLieferadresse.getText().trim();
                    String rechnungsadresse = txtRechnungsadresse.getText().trim();

                    // Minimale Validierungen
                    if (vorname.isEmpty() || nachname.isEmpty() || lieferadresse.isEmpty() || rechnungsadresse.isEmpty()) {
                        JOptionPane.showMessageDialog(null, "Bitte füllen Sie alle Felder aus!",
                                "Hinweis: Eingabefehler", JOptionPane.INFORMATION_MESSAGE);
                        return;
                    }

                    Kunde newKunde = new Kunde(id, vorname, nachname, lieferadresse, rechnungsadresse);
                    boolean success;
                    if (kunde == null) {
                        // Neuer Kunde
                        success = ses.getCommunicator().addKunde(newKunde);
                    } else {
                        // Kunde bearbeiten
                        success = ses.getCommunicator().updateKunde(newKunde);
                    }

                    if (success) {
                        JOptionPane.showMessageDialog(null, kunde == null ? "Kunde erfolgreich angelegt!" : "Kunde erfolgreich bearbeitet!",
                                "Hinweis: Erfolg", JOptionPane.INFORMATION_MESSAGE);
                        dispose();
                    } else {
                        JOptionPane.showMessageDialog(null, kunde == null ? "Fehler beim Speichern des Kunden!" : "Fehler beim Bearbeiten des Kunden!",
                                "Fehler: Speichern", JOptionPane.ERROR_MESSAGE);
                    }
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(null, "Bitte geben Sie eine gültige numerische ID ein!",
                            "Hinweis: Eingabefehler", JOptionPane.INFORMATION_MESSAGE);
                }
            }
        });
        buttonPane.add(btnSpeichern);

        JButton btnClose = new JButton("Schließen");
        btnClose.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                dispose();
            }
        });
        buttonPane.add(btnClose);
    }
}